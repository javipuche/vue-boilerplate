/* -----------------------------------------------------------------------------
 * INPUT
 */

/* Mixins
 * -------------------------------------------------------------------------- */

@mixin c-input-focus($this) {
  &:active:not(:disabled):not(&--is-disabled):not(:read-only),
  &:focus:not(:disabled):not(&--is-disabled):not(:read-only) {
    @content;
  }
}

@mixin c-input-hover($this) {
  &:hover:not(:disabled):not(&--is-disabled):not(:read-only) {
    @content;
  }
}

/* Output
 * -------------------------------------------------------------------------- */

.c-input {
  $this: &;

  --c-input-font-size: 1em;
  --c-input-icon-color: var(--color-primary);
  --c-input-min-height: 3em;
  --c-input-padding: 0 1em;
  --c-input-background-color: var(--color-shade-0);
  --c-input-radius: var(--radius-s);
  --c-input-border-color: var(--color-shade-400);
  --c-input-border-color-focus: var(--color-primary);
  --c-input-border-color-hover: var(--color-shade-500);
  --c-input-placeholder-color: var(--color-shade-500);
  --c-input-label-padding: 0.25em 1em;
  --c-input-icon-background-color: var(--c-input-background-color);
  --c-input-icon-detail-color: var(--c-input-border-color);

  &__inner {
    display: grid;
    grid-template-columns: 1fr;
    position: relative;
  }

  &__element {
    min-height: var(--c-input-min-height);
    padding: var(--c-input-padding);
    font-size: var(--c-input-font-size);
    font-weight: 400;
    border: 0.0625em solid var(--c-input-border-color);
    border-radius: var(--c-input-radius);
    background-color: var(--c-input-background-color);
    color: var(--c-input-color, currentColor);
    outline: none;
    appearance: none;
    transition: all 0.3s;
    grid-row: 1/3;
    grid-column: 1/3;
    position: relative;
    z-index: 1;
    margin: 0;
    width: 100%;

    &:not(:placeholder-shown) {
      padding-top: 0.625em;

      & + #{$this}__label {
        transform: translateY(0);
        opacity: 1;
      }
    }

    @include c-input-hover($this) {
      --c-input-border-color: var(--c-input-border-color-hover);
    }

    @include c-input-focus($this) {
      --c-input-border-color: var(--c-input-border-color-focus);
    }

    &::placeholder {
      color: var(--c-input-placeholder-color);
    }
  }

  &__label {
    grid-row: 1/2;
    grid-column: 1/2;
    padding: var(--c-input-label-padding);
    display: block;
    text-transform: uppercase;
    transition: all 0.3s;
    opacity: 0;
    transform: translateY(0.25em);
    white-space: nowrap;
    overflow-x: hidden;
    text-overflow: ellipsis;
    position: relative;
    z-index: 2;

    &-text {
      font-size: 0.625em;
    }
  }

  &__icon {
    grid-row: 1/3;
    grid-column: 2/3;
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    font-size: var(--c-input-icon-font-size, 1em);
    border-top-right-radius: var(--c-input-radius);
    border-bottom-right-radius: var(--c-input-radius);
    background-color: var(--c-input-icon-background-color);
    color: var(--c-input-icon-color);
    z-index: 2;
    margin: 0.0625em;
    min-width: var(--c-input-min-height);

    &::after {
      content: "";
      height: 2em;
      width: 0.0625em;
      background-image: linear-gradient(to bottom, transparent, var(--c-input-icon-detail-color), transparent);
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
    }
  }

  &--has-icon {
    #{$this}__element {
      padding-right: 4em;
    }
  }

  &--not-label {
    #{$this}__element {
      padding-top: 0;
    }
  }

  &--select {
    #{$this}__element {
      cursor: pointer;
    }

    option {
      padding: 0;
      color: var(--c-input-color, currentColor);
    }
  }

  &--textarea {
    #{$this}__element {
      min-height: 8em;
      padding-top: 1em;
      padding-bottom: 1em;
      resize: none;

      &:not(:placeholder-shown) {
        padding-top: 1.5em;
      }
    }

    #{$this}__label {
      padding-bottom: 0.5em;

      &::before {
        content: "";
        background-color: var(--c-input-background-color);
        width: calc(100% - 0.125em);
        left: 50%;
        top: 0.0625em;
        position: absolute;
        display: block;
        height: 100%;
        transform: translateX(-50%);
        z-index: 1;
        border-top-left-radius: var(--c-input-radius);
        border-top-right-radius: var(--c-input-radius);
        pointer-events: none;
      }

      &-text {
        position: relative;
        z-index: 2;
      }
    }
  }

  &--is-disabled,
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;

    #{$this}__element,
    #{$this}__label {
      cursor: not-allowed;
    }
  }
}
